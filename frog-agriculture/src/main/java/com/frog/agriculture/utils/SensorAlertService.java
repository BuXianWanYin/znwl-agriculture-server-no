package com.frog.agriculture.utils;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple10;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class SensorAlertService extends Contract {
    public static final String[] BINARY_ARRAY = {"","013567ffffffffffffffff811115610ff657600080fd5b6110028d828e01610ec7565b97505060808b013567ffffffffffffffff81111561101f57600080fd5b61102b8d828e01610ec7565b96505060a08b013567ffffffffffffffff81111561104857600080fd5b6110548d828e01610ec7565b95505060c08b013567ffffffffffffffff81111561107157600080fd5b61107d8d828e01610ec7565b94505060e08b013567ffffffffffffffff81111561109a57600080fd5b6110a68d828e01610ec7565b9350506101008b013567ffffffffffffffff8111156110c457600080fd5b6110d08d828e01610ec7565b9250506101208b013567ffffffffffffffff8111156110ee57600080fd5b6110fa8d828e01610ec7565b9150509295989b9194979a5092959850565b6000611117826112e2565b61112181856112ed565b9350611131818560208601611317565b61113a8161134a565b840191505092915050565b61114e816112fe565b82525050565b60006080820190506111696000830187611145565b818103602083015261117b818661110c565b9050818103604083015261118f818561110c565b905081810360608301526111a3818461110c565b905095945050505050565b6000610140820190506111c4600083018d611145565b81810360208301526111d6818c61110c565b905081810360408301526111ea818b61110c565b905081810360608301526111fe818a61110c565b90508181036080830152611212818961110c565b905081810360a0830152611226818861110c565b905081810360c083015261123a818761110c565b905081810360e083015261124e818661110c565b9050818103610100830152611263818561110c565b9050818103610120830152611278818461110c565b90509b9a5050505050505050505050565b6000604051905081810181811067ffffffffffffffff821117156112ac57600080fd5b8060405250919050565b600067ffffffffffffffff8211156112cd57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561133557808201518184015260208101905061131a565b83811115611344576000848401525b50505050565b6000601f19601f8301169050919050565b611364816112fe565b811461136f57600080fd5b5056fea2646970667358221220832c73767990c93b03621a5f1efe315c89f443eb649b73b90f174f8aa51e789664736f6c634300060a0033"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","013567ffffffffffffffff811115610ff657600080fd5b6110028d828e01610ec7565b97505060808b013567ffffffffffffffff81111561101f57600080fd5b61102b8d828e01610ec7565b96505060a08b013567ffffffffffffffff81111561104857600080fd5b6110548d828e01610ec7565b95505060c08b013567ffffffffffffffff81111561107157600080fd5b61107d8d828e01610ec7565b94505060e08b013567ffffffffffffffff81111561109a57600080fd5b6110a68d828e01610ec7565b9350506101008b013567ffffffffffffffff8111156110c457600080fd5b6110d08d828e01610ec7565b9250506101208b013567ffffffffffffffff8111156110ee57600080fd5b6110fa8d828e01610ec7565b9150509295989b9194979a5092959850565b6000611117826112e2565b61112181856112ed565b9350611131818560208601611317565b61113a8161134a565b840191505092915050565b61114e816112fe565b82525050565b60006080820190506111696000830187611145565b818103602083015261117b818661110c565b9050818103604083015261118f818561110c565b905081810360608301526111a3818461110c565b905095945050505050565b6000610140820190506111c4600083018d611145565b81810360208301526111d6818c61110c565b905081810360408301526111ea818b61110c565b905081810360608301526111fe818a61110c565b90508181036080830152611212818961110c565b905081810360a0830152611226818861110c565b905081810360c083015261123a818761110c565b905081810360e083015261124e818661110c565b9050818103610100830152611263818561110c565b9050818103610120830152611278818461110c565b90509b9a5050505050505050505050565b6000604051905081810181811067ffffffffffffffff821117156112ac57600080fd5b8060405250919050565b600067ffffffffffffffff8211156112cd57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561133557808201518184015260208101905061131a565b83811115611344576000848401525b50505050565b6000601f19601f8301169050919050565b611364816112fe565b811461136f57600080fd5b5056fea2646970667358221220832c73767990c93b03621a5f1efe315c89f443eb649b73b90f174f8aa51e789664736f6c634300060a0033"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"methodSignatureAsString\":\"SensorAlertTriggered(uint256,string,string,string)\",\"name\":\"SensorAlertTriggered\",\"type\":\"event\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":null,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"paramName\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertLevel\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertTime\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"SensorAlertDatas(uint256)\",\"name\":\"SensorAlertDatas\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"alertType\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertMessage\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"paramName\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"paramValue\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"thresholdMin\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"thresholdMax\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"sensorType\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertTime\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertLevel\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}]},{\"methodSignatureAsString\":\"addSensorAlertData(uint256,string,string,string,string,string,string,string,string,string)\",\"name\":\"addSensorAlertData\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"_alertType\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_alertMessage\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_paramName\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_paramValue\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_thresholdMin\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_thresholdMax\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_sensorType\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_alertTime\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"_alertLevel\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"getSensorAlertData(uint256)\",\"name\":\"getSensorAlertData\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}],\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"alertType\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertMessage\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"paramName\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"paramValue\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"thresholdMin\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"thresholdMax\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"sensorType\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertTime\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"alertLevel\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}]}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_SENSORALERTDATAS = "SensorAlertDatas";

    public static final String FUNC_ADDSENSORALERTDATA = "addSensorAlertData";

    public static final String FUNC_GETSENSORALERTDATA = "getSensorAlertData";

    public static final Event SENSORALERTTRIGGERED_EVENT = new Event("SensorAlertTriggered",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    protected SensorAlertService(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public List<SensorAlertTriggeredEventResponse> getSensorAlertTriggeredEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SENSORALERTTRIGGERED_EVENT, transactionReceipt);
        ArrayList<SensorAlertTriggeredEventResponse> responses = new ArrayList<SensorAlertTriggeredEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SensorAlertTriggeredEventResponse typedResponse = new SensorAlertTriggeredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.paramName = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.alertLevel = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.alertTime = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeSensorAlertTriggeredEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(SENSORALERTTRIGGERED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeSensorAlertTriggeredEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(SENSORALERTTRIGGERED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public Tuple10<BigInteger, String, String, String, String, String, String, String, String, String> SensorAlertDatas(BigInteger param0) throws ContractException {
        final Function function = new Function(FUNC_SENSORALERTDATAS,
                Arrays.<Type>asList(new Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple10<BigInteger, String, String, String, String, String, String, String, String, String>(
                (BigInteger) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (String) results.get(3).getValue(),
                (String) results.get(4).getValue(),
                (String) results.get(5).getValue(),
                (String) results.get(6).getValue(),
                (String) results.get(7).getValue(),
                (String) results.get(8).getValue(),
                (String) results.get(9).getValue());
    }

    public TransactionReceipt addSensorAlertData(BigInteger _id, String _alertType, String _alertMessage, String _paramName, String _paramValue, String _thresholdMin, String _thresholdMax, String _sensorType, String _alertTime, String _alertLevel) {
        final Function function = new Function(
                FUNC_ADDSENSORALERTDATA,
                Arrays.<Type>asList(new Uint256(_id),
                new Utf8String(_alertType),
                new Utf8String(_alertMessage),
                new Utf8String(_paramName),
                new Utf8String(_paramValue),
                new Utf8String(_thresholdMin),
                new Utf8String(_thresholdMax),
                new Utf8String(_sensorType),
                new Utf8String(_alertTime),
                new Utf8String(_alertLevel)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addSensorAlertData(BigInteger _id, String _alertType, String _alertMessage, String _paramName, String _paramValue, String _thresholdMin, String _thresholdMax, String _sensorType, String _alertTime, String _alertLevel, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDSENSORALERTDATA,
                Arrays.<Type>asList(new Uint256(_id),
                new Utf8String(_alertType),
                new Utf8String(_alertMessage),
                new Utf8String(_paramName),
                new Utf8String(_paramValue),
                new Utf8String(_thresholdMin),
                new Utf8String(_thresholdMax),
                new Utf8String(_sensorType),
                new Utf8String(_alertTime),
                new Utf8String(_alertLevel)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddSensorAlertData(BigInteger _id, String _alertType, String _alertMessage, String _paramName, String _paramValue, String _thresholdMin, String _thresholdMax, String _sensorType, String _alertTime, String _alertLevel) {
        final Function function = new Function(
                FUNC_ADDSENSORALERTDATA,
                Arrays.<Type>asList(new Uint256(_id),
                new Utf8String(_alertType),
                new Utf8String(_alertMessage),
                new Utf8String(_paramName),
                new Utf8String(_paramValue),
                new Utf8String(_thresholdMin),
                new Utf8String(_thresholdMax),
                new Utf8String(_sensorType),
                new Utf8String(_alertTime),
                new Utf8String(_alertLevel)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple10<BigInteger, String, String, String, String, String, String, String, String, String> getAddSensorAlertDataInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDSENSORALERTDATA,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple10<BigInteger, String, String, String, String, String, String, String, String, String>(

                (BigInteger) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (String) results.get(3).getValue(),
                (String) results.get(4).getValue(),
                (String) results.get(5).getValue(),
                (String) results.get(6).getValue(),
                (String) results.get(7).getValue(),
                (String) results.get(8).getValue(),
                (String) results.get(9).getValue()
                );
    }

    public Tuple10<BigInteger, String, String, String, String, String, String, String, String, String> getSensorAlertData(BigInteger _id) throws ContractException {
        final Function function = new Function(FUNC_GETSENSORALERTDATA,
                Arrays.<Type>asList(new Uint256(_id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple10<BigInteger, String, String, String, String, String, String, String, String, String>(
                (BigInteger) results.get(0).getValue(),
                (String) results.get(1).getValue(),
                (String) results.get(2).getValue(),
                (String) results.get(3).getValue(),
                (String) results.get(4).getValue(),
                (String) results.get(5).getValue(),
                (String) results.get(6).getValue(),
                (String) results.get(7).getValue(),
                (String) results.get(8).getValue(),
                (String) results.get(9).getValue());
    }

    public static SensorAlertService load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new SensorAlertService(contractAddress, client, credential);
    }

    public static SensorAlertService deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(SensorAlertService.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class SensorAlertTriggeredEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger id;

        public String paramName;

        public String alertLevel;

        public String alertTime;
    }
}
